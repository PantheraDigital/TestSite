body{
    height: 100vh;
    width: 100vw;
    margin: 0;
    padding: 0;
    background-color: rgb(255, 252, 244);
}


/*
 *
 *      Polygon Buttons
 *
 */

.poly-parallelogram{
    --width: 3px;
    --clip: polygon(25% 0, 0% 100%, 25% 100%, 25% 25%, 75% 25%, 75% 75%, 25% 75%, 25% 100%, 75% 100%, 100% 0%);
    --clip-outer: polygon(25% 0%, 100% 0%, 75% 100%, 0% 100%);
    --clip-inner: polygon(25% 0%, 100% 0%, 75% 100%, 0% 100%);
}

.poly-parallelogram:focus-within{
    text-decoration: underline;
}

/*
  interactions only happen in the shape
  is a wrapper element
*/
.poly-parallelogram.wrapper{
    position: relative;
    display: block;

    width: fit-content;
    
    clip-path: var(--clip-outer);
    background-image: linear-gradient(to bottom right, rgba(233,128,0,1) 50%, rgba(149,82,0,1) 50%);
}
.poly-parallelogram.wrapper::after{
    content: "";
    position: absolute;
    inset: 0;
    z-index: -2;
    
    clip-path: var(--clip-inner);
    background-color: rgb(212, 212, 212);
}
.poly-parallelogram.wrapper:hover::after{
    background-color: rgb(233, 233, 233);
}
.poly-parallelogram:has(input[type='radio']:checked)::after{
    background-color: rgb(255, 255, 255);
}
.poly-parallelogram.wrapper:active{
    color:rgb(0, 140, 233);
    background-image: linear-gradient(to top left, rgba(233,128,0,1) 50%, rgba(149,82,0,1) 50%);
}
.poly-parallelogram.wrapper:active::after{
    left: 1px;
}

/*
  fits shape around contents
  interactions happen on element, not just shape
*/
.poly-parallelogram.decorator{
    position: relative;
    display: block;
    padding: 10px 20px;
    margin-right: -15px;
    width: 8em;
}
.poly-parallelogram.decorator::before{
    content: "";
    position: absolute;
    inset: 0;
    z-index: -1;

    clip-path: var(--clip);
    background-image: linear-gradient(to bottom right, rgba(233,128,0,1) 50%, rgba(149,82,0,1) 50%);
}
.poly-parallelogram.decorator:hover::after{
    content: "";
    position: absolute;
    inset: 0;
    z-index: -2;
    
    clip-path: var(--clip-inner);
    background-color: rgb(155, 155, 155);
}
.poly-parallelogram.decorator.vertical{
    writing-mode: vertical-lr; 
    text-orientation:sideways; 
    transform: rotate(180deg);
    
    padding: 20px 10px;
    /*margin-bottom: -15px;
    margin-right: 0;*/
    height: 8em;
    width: fit-content;
}
.poly-parallelogram.decorator.vertical::before{
    content: "";
    background-image: linear-gradient(to top left, rgba(233,128,0,1) 50%, rgba(149,82,0,1) 50%);
}

/*
  Holds poly buttons
*/
.poly-button-wrapper{
    display: flex; 
    flex-direction: column;
    min-height: fit-content;
    padding: 26px 7px 0 0;/*height of header - border thickness*/ /*section padding - border thickness*/
}
.poly-button-wrapper li:nth-child(n+2){
    margin-top: -20px;
}


/*
 *
 *      Tabs
 *
 */

.tab{
    position: relative;
    display: inline-block;
    z-index: 0;
    padding: 0 2px 2px 2px;
}
.tab input[type="radio"]{
    pointer-events: none;
    position: absolute;
    width: 0;
}
.tab:has(input[type='radio']:checked){/* use js if 'has' is not supported */
    z-index: 1;
}
.tab:focus-within{
    text-decoration: underline;
}
.tab:active{
    color:rgb(0, 140, 233);
}


.tab.poly{
    --border-width: 3px;
    --corner-width: 25px;

    --clip: polygon(0% 0%, 0% 100%, 25% 100%, 25% 25%, 50% 25%, 75% 100%, 100% 100%, 75% 0);
    --clip-outer: polygon(0% 0%, 0% 100%, 100% 100%, 75% 0%);
    --clip-inner: polygon(0% 0%, 0% 100%, 100% 100%, 75% 0%);
    
    --bg-color: transparent;

    padding: var(--border-width) calc(5px + var(--corner-width)) var(--border-width) 1ch;
    background-color: var(--bg-color);
}
.tab.poly::before{/* poly border */
    content: "";
    position: absolute;
    inset: 0;
    z-index: -2;

    clip-path: var(--clip);
    background-color:firebrick;
    background-image: linear-gradient(-90deg, rgba(149,82,0,1) var(--corner-width), rgba(233,128,0,1) var(--corner-width));
}
.tab.poly::after{/* inside color */
    content: "";
    position: absolute;
    z-index: -1;

    inset: 0;
    clip-path: var(--clip-inner);
    background-color: rgb(212, 212, 212);
}
.tab.poly:hover:after{
    background-color: rgb(233, 233, 233);
}
.tab.poly:has(input[type='radio']:checked)::after{
    background-color: rgb(255, 255, 255);
}

.tab.poly.clip-bottom{
    padding: 1ch var(--border-width) calc(5px + var(--corner-width)) var(--border-width);
}
.tab.poly.clip-top{
    padding: calc(5px + var(--corner-width)) var(--border-width) 1ch var(--border-width);
}


/*
 *
 *      Sections
 *
 */

.overlap-sections {
    position: relative;
}
.overlap-sections section{
    position: relative;
    top:0;
}


.size-sections{
    width:  calc(100% - 20px);
    height: calc(100% - 20px - 29px + 3px);/*fill - margin gap - header height + tab overlap*/
    padding: 10px;
    top: -3px;
}
.size-sections section{
    width:  100%;
    height: 100%;
}

.main-section{
    display: inline-block; 
    width: min(calc(90vw - 39px), 1200px); 
    height: 90vh; 
    min-height: 406.5px; 
    min-width: 342px;
}

.subsection-border{
    background-color: white;
}
.subsection-border::before{
    --solid-x: 300px;
    --solid-y: 50px;
    --border-color: rgb(233, 128, 0);
    --border-style: outset;
    --border-width: 3px;

    content: "";
    position: absolute;
    inset: 0;
    border: var(--border-width) var(--border-color) var(--border-style);

    clip-path: border-box 
        polygon(0 0, 0 100%, var(--border-width) var(--solid-y), var(--border-width) var(--border-width),
        var(--solid-x) var(--border-width), 100% 0, 
        calc(100% - var(--border-width)) calc(100% - var(--solid-y)), calc(100% - var(--border-width)) calc(100% - var(--border-width)),
        calc(100% - var(--solid-x)) calc(100% - var(--border-width)), 0 100%, 100% 100%, 100% 0);
}


/*
 *
 *      Style
 *
 */
.vertical-text-right{
    writing-mode: vertical-lr; 
    text-orientation:sideways; 
    transform: rotate(180deg);
}
.vertical-text-left{
    writing-mode: vertical-lr; 
    text-orientation:sideways; 
}


.strip-radio{
    pointer-events: none;
    display: inline-block;
    position: absolute;
    width: 0;
    margin: 0;
}


.strip-li li{
    display: block;
    width: fit-content;
}